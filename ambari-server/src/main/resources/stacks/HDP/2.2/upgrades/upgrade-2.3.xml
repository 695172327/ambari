<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->


<upgrade xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <target>2.3.*.*</target>
  <target-stack>HDP-2.3</target-stack>
  <order>
    <group xsi:type="cluster" name="PRE_CLUSTER" title="Prepare Backups">
      <direction>UPGRADE</direction>
      <execute-stage service="HDFS" component="NAMENODE" title="Pre Upgrade HDFS">
        <task xsi:type="execute" hosts="master">
          <script>scripts/namenode.py</script>
          <function>prepare_rolling_upgrade</function>
        </task>
      </execute-stage>

      <execute-stage service="HBASE" component="HBASE_MASTER" title="Pre Upgrade HBase">
        <task xsi:type="execute" hosts="master">
          <script>scripts/hbase_upgrade.py</script>
          <function>snapshot</function>
        </task>
      </execute-stage>

      <execute-stage service="HIVE" component="HIVE_METASTORE" title="Pre Upgrade Hive">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Hive Metastore database located on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Pre Upgrade Oozie">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Oozie Server database on {{oozie-env/oozie_hostname}}.</message>
        </task>
      </execute-stage>

      <execute-stage service="RANGER" component="RANGER_ADMIN" title="Pre Upgrade Ranger">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Ranger Admin database and Ranger Audit database</message>
        </task>
      </execute-stage>

    </group>

    <group name="ZOOKEEPER" title="ZooKeeper">
      <service name="ZOOKEEPER">
        <component>ZOOKEEPER_SERVER</component>
      </service>
    </group>

    <group name="RANGER" title="Ranger">
      <skippable>true</skippable>
      <service name="RANGER">
        <component>RANGER_ADMIN</component>
        <component>RANGER_USERSYNC</component>
      </service>
    </group>

    <group name="CORE_MASTER" title="Core Masters">
      <service-check>false</service-check>
      <service name="HDFS">
        <component>JOURNALNODE</component>
        <component>NAMENODE</component>
      </service>

      <service name="MAPREDUCE2">
        <component>HISTORYSERVER</component>
      </service>

      <service name="YARN">
        <component>APP_TIMELINE_SERVER</component>
        <component>RESOURCEMANAGER</component>
      </service>

      <service name="HBASE">
        <component>HBASE_MASTER</component>
      </service>
    </group>

    <group name="SERVICE_CHECK" title="All Service Checks" xsi:type="service-check">
      <skippable>true</skippable>
      <direction>UPGRADE</direction>
      <priority>
        <service>HDFS</service>
        <service>MAPREDUCE2</service>
        <service>YARN</service>
        <service>HBASE</service>
      </priority>
      <exclude>
        <service>AMBARI_METRICS</service>
      </exclude>
    </group>

    <group name="CORE_SLAVES" title="Core Slaves" xsi:type="colocated">
      <service-check>false</service-check>
      <service name="HDFS">
        <component>DATANODE</component>
      </service>

      <service name="HBASE">
        <component>HBASE_REGIONSERVER</component>
      </service>

      <service name="YARN">
        <component>NODEMANAGER</component>
      </service>

      <batch>
        <percent>20</percent>
        <summary>Verification Required</summary>
        <message>The initial batch of {{components}} hosts have been {{direction.past}}. You are advised to check the hosts and perform cluster/workload-specific tests against your cluster to ensure proper operation before proceeding with {{direction.text}} of the remaining services.</message>
      </batch>
    </group>

    <group name="SERVICE_CHECK" title="All Service Checks" xsi:type="service-check">
      <skippable>true</skippable>
      <direction>UPGRADE</direction>
      <priority>
        <service>HDFS</service>
        <service>YARN</service>
        <service>HBASE</service>
      </priority>
      <exclude>
        <service>AMBARI_METRICS</service>
      </exclude>
    </group>

    <group name="HIVE" title="Hive">
      <skippable>true</skippable>
      <service name="HIVE">
        <component>HIVE_METASTORE</component>
        <component>HIVE_SERVER</component>
        <component>WEBHCAT_SERVER</component>
      </service>
    </group>

    <group name="SPARK" title="Spark">
      <skippable>true</skippable>
      <service name="SPARK">
        <component>SPARK_JOBHISTORYSERVER</component>
        <component>SPARK_CLIENT</component>
      </service>
    </group>

    <group name="OOZIE" title="Oozie">
      <skippable>true</skippable>
      <service name="OOZIE">
        <component>OOZIE_SERVER</component>
        <component>OOZIE_CLIENT</component>
      </service>
    </group>

    <group name="FALCON" title="Falcon">
      <skippable>true</skippable>
      <service name="FALCON">
        <component>FALCON_SERVER</component>
        <component>FALCON_CLIENT</component>
      </service>
    </group>

    <group name="CLIENTS" title="Client Components">
      <service-check>false</service-check>
      <service name="ZOOKEEPER">
        <component>ZOOKEEPER_CLIENT</component>
      </service>
      <service name="HDFS">
        <component>HDFS_CLIENT</component>
      </service>

      <service name="YARN">
        <component>YARN_CLIENT</component>
      </service>

      <service name="MAPREDUCE2">
        <component>MAPREDUCE2_CLIENT</component>
      </service>

      <service name="TEZ">
        <component>TEZ_CLIENT</component>
      </service>

      <service name="HBASE">
        <component>HBASE_CLIENT</component>
      </service>

      <service name="PIG">
        <component>PIG</component>
      </service>

      <service name="SQOOP">
        <component>SQOOP</component>
      </service>

      <service name="HIVE">
        <component>HIVE_CLIENT</component>
        <component>HCAT</component>
      </service>
    </group>

    <group name="SERVICE_CHECK" title="All Service Checks" xsi:type="service-check">
      <skippable>true</skippable>
      <direction>UPGRADE</direction>
      <priority>
        <service>HDFS</service>
        <service>YARN</service>
        <service>HBASE</service>
      </priority>
      <exclude>
        <service>AMBARI_METRICS</service>
      </exclude>
    </group>

    <group name="KAFKA" title="Kafka">
      <skippable>true</skippable>
      <service name="KAFKA">
        <component>KAFKA_BROKER</component>
      </service>
    </group>

    <group name="KNOX" title="Knox">
      <skippable>true</skippable>
      <service name="KNOX">
        <component>KNOX_GATEWAY</component>
      </service>
    </group>

    <group name="STORM" title="Storm">
      <skippable>true</skippable>
      <service name="STORM">
        <component>NIMBUS</component>
        <component>STORM_REST_API</component>
        <component>SUPERVISOR</component>
        <component>STORM_UI_SERVER</component>
        <component>DRPC_SERVER</component>
      </service>
    </group>

    <group name="SLIDER" title="Slider">
      <skippable>true</skippable>
      <service name="SLIDER">
        <component>SLIDER</component>
      </service>
    </group>

    <group name="FLUME" title="Flume">
      <skippable>true</skippable>
      <service name="FLUME">
        <component>FLUME_HANDLER</component>
      </service>
    </group>

    <group xsi:type="cluster" name="POST_CLUSTER" title="Finalize {{direction.text.proper}}">
      <skippable>true</skippable>
      <execute-stage title="Check Unhealthy Hosts" id="unhealthy-hosts">
        <task xsi:type="manual">
          <message>The following hosts were unhealthy and should be resolved before finalizing can be completed: {{hosts.unhealthy}}</message>
        </task>
      </execute-stage>

      <execute-stage title="Confirm Finalize">
        <direction>UPGRADE</direction>
        <task xsi:type="manual">
          <message>Please confirm you are ready to finalize.</message>
        </task>
      </execute-stage>

      <execute-stage service="HDFS" component="NAMENODE" title="Execute HDFS Finalize">
        <task xsi:type="execute" hosts="master">
          <script>scripts/namenode.py</script>
          <function>finalize_rolling_upgrade</function>
        </task>
      </execute-stage>
      <execute-stage title="Save Cluster State" service="" component="">
        <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FinalizeUpgradeAction">
        </task>
      </execute-stage>
    </group>
  </order>

  <processing>
    <service name="ZOOKEEPER">
      <component name="ZOOKEEPER_SERVER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="ZOOKEEPER_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="RANGER">
      <component name="RANGER_ADMIN">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="RANGER_USERSYNC">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="HDFS">
      <component name="NAMENODE">
        <pre-upgrade>
          <task xsi:type="configure">
            <condition type="ranger-hdfs-plugin-properties" key="ranger-hdfs-plugin-enabled" value="true">
              <type>hdfs-site</type>
              <key>dfs.namenode.inode.attributes.provider.class</key>
              <value>org.apache.ranger.authorization.hadoop.RangerHdfsAuthorizer</value>
            </condition>
          </task>
          <task xsi:type="configure" summary="Transitioning Ranger HDFS Policy">
            <type>ranger-hdfs-policymgr-ssl</type>
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="SSL_KEYSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.keystore" default-value="/usr/hdp/current/hadoop-client/conf/ranger-plugin-keystore.jks" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="SSL_KEYSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.keystore.password" mask="true" default-value="myKeyFilePassword" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="SSL_TRUSTSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.truststore" default-value="/usr/hdp/current/hadoop-client/conf/ranger-plugin-truststore.jks" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="SSL_TRUSTSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.truststore.password" mask="true" default-value="changeit" />
          </task>
          <task xsi:type="configure" summary="Transitioning Ranger HDFS Audit">
            <type>ranger-hdfs-audit</type>
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="XAAUDIT.DB.IS_ENABLED" to-key="xasecure.audit.destination.db" default-value="false"/>
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY" to-key="xasecure.audit.destination.hdfs.dir" default-value="hdfs://{{namenode_hostname}}:8020/ranger/audit" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="XAAUDIT.HDFS.IS_ENABLED" to-key="xasecure.audit.destination.hdfs" default-value="true" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY" to-key="xasecure.audit.destination.hdfs.batch.filespool.dir" default-value="/var/log/hadoop/hdfs/audit/hdfs/spool" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="XAAUDIT.DB.USER_NAME" to-key="xasecure.audit.destination.db.user" default-value="" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="XAAUDIT.DB.PASSWORD" to-key="xasecure.audit.destination.db.password" mask="true" default-value="" />
            <set key="xasecure.audit.destination.solr" value="true" />
            <set key="xasecure.audit.destination.solr.urls" value="{{ranger_audit_solr_urls}}" />
            <set key="xasecure.audit.destination.solr.zookeepers" value="" />
            <set key="xasecure.audit.destination.solr.batch.filespool.dir" value="/var/logs/hdfs/audit/solr/spool" />
            <set key="xasecure.audit.destination.db.jdbc.driver" value="{{jdbc_driver}}" />
            <set key="xasecure.audit.destination.db.jdbc.url" value="{{audit_jdbc_url}}" />
            <set key="xasecure.audit.provider.summary.enabled" value="true" />
          </task>
          
          <task xsi:type="configure" summary="Transitioning Ranger HDFS Security">
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="REPOSITORY_NAME" to-key="ranger.plugin.hdfs.service.name" default-value="{{repo_name}}" />
            <transfer operation="copy" from-type="ranger-hdfs-plugin-properties" from-key="POLICY_MGR_URL" to-key="ranger.plugin.hdfs.policy.rest.url" default-value="{{policymgr_mgr_url}}" />
          </task>
          
          <task xsi:type="configure">
            <type>ranger-hdfs-plugin-properties</type>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FILE" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FILE" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="SSL_KEYSTORE_FILE_PATH" />
            <transfer operation="delete" delete-key="SSL_KEYSTORE_PASSWORD" />
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_FILE_PATH" />
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_PASSWORD" />
            <transfer operation="delete" delete-key="XAAUDIT.DB.IS_ENABLED" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.IS_ENABLED" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY" />
            <transfer operation="delete" delete-key="XAAUDIT.DB.USER_NAME" />
            <transfer operation="delete" delete-key="XAAUDIT.DB.PASSWORD" />
            <transfer operation="delete" delete-key="REPOSITORY_NAME" />
            <transfer operation="delete" delete-key="POLICY_MGR_URL" />
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="DATANODE">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="HDFS_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="JOURNALNODE">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="MAPREDUCE2">
      <component name="HISTORYSERVER">
        <pre-upgrade>
          <task xsi:type="configure">
            <type>mapred-site</type>
            <transfer operation="move" from-key="mapreduce.job.speculative.speculativecap" to-key="mapreduce.job.speculative.speculative-cap-running-tasks" default-value="0.1"/>
            <transfer operation="delete" delete-key="mapreduce.task.tmp.dir" />
            <set key="mapreduce.fileoutputcommitter.algorithm.version" value="1"/>
          </task>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="MAPREDUCE2_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="YARN">
      <component name="APP_TIMELINE_SERVER">
        <pre-upgrade>
          <task xsi:type="configure">
            <type>yarn-site</type>
            <set key="yarn.timeline-service.recovery.enabled" value="true"/>
            <set key="yarn.timeline-service.state-store-class" value="org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore"/>
            <transfer operation="copy" from-key="yarn.timeline-service.leveldb-timeline-store.path" to-key="yarn.timeline-service.leveldb-state-store.path" default-value="/hadoop/yarn/timeline"/>
          </task>
        </pre-upgrade>

        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="RESOURCEMANAGER">
        <pre-upgrade>
          <task xsi:type="configure">
            <type>yarn-site</type>
            <set key="yarn.node-labels.enabled" value="false"/>
          </task>
          <task xsi:type="configure">
            <type>capacity-scheduler</type>
            <set key="yarn.scheduler.capacity.root.default-node-label-expression" value=""/>
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="NODEMANAGER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="YARN_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="HBASE">
      <component name="HBASE_MASTER">
        <pre-upgrade>
          <task xsi:type="configure" summary="Transitioning Ranger HBase Policy">
            <type>ranger-hbase-policymgr-ssl</type>
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="SSL_KEYSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.keystore" default-value="/usr/hdp/current/hbase-client/conf/ranger-plugin-keystore.jks" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="SSL_KEYSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.keystore.password" mask="true" default-value="myKeyFilePassword" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="SSL_TRUSTSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.truststore" default-value="/usr/hdp/current/hbase-client/conf/ranger-plugin-truststore.jks" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="SSL_TRUSTSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.truststore.password" mask="true" default-value="changeit" />
          </task>
          <task xsi:type="configure" summary="Transitioning Ranger HBase Audit">
            <type>ranger-hbase-audit</type>
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="XAAUDIT.DB.IS_ENABLED" to-key="xasecure.audit.destination.db" default-value="false" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY" to-key="xasecure.audit.destination.hdfs.dir" default-value="hdfs://{{namenode_hostname}}:8020/ranger/audit" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="XAAUDIT.HDFS.IS_ENABLED" to-key="xasecure.audit.destination.hdfs" default-value="true" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY" to-key="xasecure.audit.destination.hdfs.batch.filespool.dir" default-value="/var/logs/hadoop/hdfs/audit/hdfs/spool" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="XAAUDIT.DB.USER_NAME" to-key="xasecure.audit.destination.db.user" default-value="" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="XAAUDIT.DB.PASSWORD" to-key="xasecure.audit.destination.db.password" mask="true" default-value="" />
            <set key="xasecure.audit.destination.solr" value="true" />
            <set key="xasecure.audit.destination.solr.urls" value="{{ranger_audit_solr_urls}}" />
            <set key="xasecure.audit.destination.solr.zookeepers" value="" />
            <set key="xasecure.audit.destination.solr.batch.filespool.dir" value="/var/logs/hbase/audit/solr/spool" />
            <set key="xasecure.audit.destination.db.jdbc.driver" value="{{jdbc_driver}}" />
            <set key="xasecure.audit.destination.db.jdbc.url" value="{{audit_jdbc_url}}" />
            <set key="xasecure.audit.provider.summary.enabled" value="true" />
          </task>
          <task xsi:type="configure">
            <type>ranger-hbase-security</type>
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="UPDATE_XAPOLICIES_ON_GRANT_REVOKE" to-key="xasecure.hbase.update.xapolicies.on.grant.revoke" default-value="true" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="POLICY_MGR_URL" to-key="ranger.plugin.hbase.policy.rest.url" default-value="{{policymgr_mgr_url}}" />
            <transfer operation="copy" from-type="ranger-hbase-plugin-properties" from-key="REPOSITORY_NAME" to-key="ranger.plugin.hbase.service.name" default-value="{{repo_name}}" />
          </task>
          <task xsi:type="configure">
            <type>ranger-hbase-plugin-properties</type>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FILE" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FILE" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS" />
            <transfer operation="delete" delete-key="SQL_CONNECTOR_JAR" />
            <transfer operation="delete" delete-key="REPOSITORY_NAME" />
            <transfer operation="delete" delete-key="POLICY_MGR_URL" />
            <transfer operation="delete" delete-key="UPDATE_XAPOLICIES_ON_GRANT_REVOKE" />
            <transfer operation="delete" delete-key="SSL_KEYSTORE_FILE_PATH" />
            <transfer operation="delete" delete-key="SSL_KEYSTORE_PASSWORD" />
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_FILE_PATH" />
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_PASSWORD" />
            <transfer operation="delete" delete-key="XAAUDIT.DB.IS_ENABLED" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.IS_ENABLED" />
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY" />
            <transfer operation="delete" delete-key="XAAUDIT.DB.USER_NAME" />
            <transfer operation="delete" delete-key="XAAUDIT.DB.PASSWORD" />
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="HBASE_REGIONSERVER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="HBASE_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="TEZ">
      <component name="TEZ_CLIENT">
        <pre-upgrade>
          <task xsi:type="configure">
            <type>tez-site</type>
            <set key="tez.am.view-acls" value="*"/>
          </task>
          <task xsi:type="configure">
            <type>tez-site</type>
            <set key="tez.task.generate.counters.per.io" value="true"/>
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="PIG">
      <component name="PIG">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="SQOOP">
      <component name="SQOOP">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="HIVE">
      <component name="HIVE_METASTORE">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="HIVE_SERVER">
        <pre-upgrade>
          <task xsi:type="manual">
            <summary>HiveServer Port Availability</summary>
            <message>Please note that the HiveServer port will now change to 10010 if hive is using a binary transfer mode or 10011 if hive is using an http transport mode. You can use "netstat -anp | grep 1001[01]" to determine if the port is available on each of following HiveServer host(s): {{hosts.all}}. If the port is not available, the process using it must be terminated.</message>
          </task>

          <task xsi:type="configure">
            <condition type="hive-site" key="hive.server2.transport.mode" value="binary">
              <type>hive-site</type>
              <key>hive.server2.thrift.port</key>
              <value>10010</value>
            </condition>
            <condition type="hive-site" key="hive.server2.transport.mode" value="http">
              <type>hive-site</type>
              <key>hive.server2.http.port</key>
              <value>10011</value>
            </condition>
          </task>

          <task xsi:type="configure" summary="Configuring Ranger Hive Policy">
            <type>ranger-hive-policymgr-ssl</type>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="SSL_KEYSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.keystore" default-value="/usr/hdp/current/hive-server2/conf/ranger-plugin-keystore.jks"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="SSL_KEYSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.keystore.password" default-value="myKeyFilePassword" mask="true"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="SSL_TRUSTSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.truststore" default-value="/usr/hdp/current/hive-server2/conf/ranger-plugin-truststore.jks"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="SSL_TRUSTSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.truststore.password" default-value="changeit" mask="true"/>
          </task>

          <task xsi:type="configure" summary="Configuring Ranger Hive Security">
            <type>ranger-hive-security</type>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="POLICY_MGR_URL" to-key="ranger.plugin.hive.service.name" default-value="{{repo_name}}"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="REPOSITORY_NAME" to-key="ranger.plugin.hive.policy.source.impl" default-value="org.apache.ranger.admin.client.RangerAdminRESTClient"/>
          </task>

          <task xsi:type="configure" summary="Configuring Ranger Hive Audit">
            <type>ranger-hive-audit</type>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="UPDATE_XAPOLICIES_ON_GRANT_REVOKE" to-key="xasecure.hive.update.xapolicies.on.grant.revoke" default-value="TRUE"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="XAAUDIT.DB.IS_ENABLED" to-key="xasecure.audit.destination.db" default-value="FALSE"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY" to-key="xasecure.audit.destination.hdfs.dir" default-value="hdfs://{{namenode_hostname}}:8020/ranger/audit"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="XAAUDIT.HDFS.IS_ENABLED" to-key="xasecure.audit.destination.hdfs" default-value="TRUE"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY" to-key="xasecure.audit.destination.hdfs.batch.filespool.dir" default-value="/var/log/knox/audit/hdfs/spool"/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="XAAUDIT.DB.USER_NAME" to-key="xasecure.audit.destination.db.user" default-value=""/>
            <transfer operation="copy" from-type="ranger-hive-plugin-properties" from-key="XAAUDIT.DB.PASSWORD" to-key="xasecure.audit.destination.db.passwordr" default-value="" mask="true"/>
            <set key="xasecure.audit.destination.solr" value="TRUE"/>
            <set key="xasecure.audit.destination.solr.urls" value="{{ranger_audit_solr_urls}}"/>
            <set key="xasecure.audit.destination.solr.zookeepers" value=""/>
            <set key="xasecure.audit.destination.solr.batch.filespool.dir" value="/var/log/knox/audit/solr/spool"/>
            <set key="xasecure.audit.destination.db.jdbc.driver" value="{{jdbc_driver}}"/>
            <set key="xasecure.audit.destination.db.jdbc.url" value=""/>
            <set key="xasecure.audit.provider.summary.enabled" value="TRUE"/>
          </task>

          <task xsi:type="configure" summary="Removing Deprecated Ranger Configurations">
            <type>ranger-hive-plugin-properties</type>
            <transfer operation="delete" delete-key="SSL_KEYSTORE_FILE_PATH"/>
            <transfer operation="delete" delete-key="SSL_KEYSTORE_PASSWORD"/>
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_FILE_PATH"/>
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_PASSWORD"/>
            <transfer operation="delete" delete-key="POLICY_MGR_URL"/>
            <transfer operation="delete" delete-key="REPOSITORY_NAME"/>
            <transfer operation="delete" delete-key="UPDATE_XAPOLICIES_ON_GRANT_REVOKE"/>
            <transfer operation="delete" delete-key="XAAUDIT.DB.IS_ENABLED"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.IS_ENABLED"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY"/>
            <transfer operation="delete" delete-key="XAAUDIT.DB.USER_NAME"/>
            <transfer operation="delete" delete-key="XAAUDIT.DB.PASSWORD"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FILE"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FILE"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS"/>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task xsi:type="manual">
            <summary>HiveServer Port Availability</summary>
            <message>Please note that the HiveServer port will now change to 10000 if hive is using a binary transfer mode or 10001 if hive is using an http transport mode. You can use "netstat -anp | grep 1000[01]" to determine if the port is available on each of following HiveServer host(s): {{hosts.all}}. If the port is not available, the process using it must be terminated.</message>
          </task>

          <task xsi:type="configure">
            <condition type="hive-site" key="hive.server2.transport.mode" value="binary">
              <type>hive-site</type>
              <key>hive.server2.thrift.port</key>
              <value>10000</value>
            </condition>
            <condition type="hive-site" key="hive.server2.transport.mode" value="http">
              <type>hive-site</type>
              <key>hive.server2.http.port</key>
              <value>10001</value>
            </condition>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="WEBHCAT_SERVER">
        <pre-upgrade>
          <task xsi:type="configure">
            <type>webhcat-env</type>
            <replace key="content" find="export HADOOP_HOME={{hadoop_home}}" replace-with="export HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}" />
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="HIVE_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>

      <component name="HCAT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="SLIDER">
      <component name="SLIDER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="SPARK">
      <component name="SPARK_JOBHISTORYSERVER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
      <component name="SPARK_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="OOZIE">
      <component name="OOZIE_SERVER">
        <pre-upgrade>
          <task xsi:type="configure">
            <summary>Updating oozie-site to remove redundant configurations</summary>
            <type>oozie-site</type>
            <transfer operation="delete" delete-key="*" preserve-edits="true">
              <keep-key>oozie.base.url</keep-key>
              <keep-key>oozie.services.ext</keep-key>
              <keep-key>oozie.db.schema.name</keep-key>
              <keep-key>oozie.service.JPAService.jdbc.username</keep-key>
              <keep-key>oozie.service.JPAService.jdbc.password</keep-key>
              <keep-key>oozie.service.JPAService.jdbc.driver</keep-key>
              <keep-key>oozie.service.JPAService.jdbc.url</keep-key>
              <keep-key>oozie.service.AuthorizationService.security.enabled</keep-key>
              <keep-key>oozie.authentication.type</keep-key>
              <keep-key>oozie.authentication.simple.anonymous.allowed</keep-key>
              <keep-key>oozie.authentication.kerberos.name.rules</keep-key>
              <keep-key>oozie.credentials.credentialclasses</keep-key>
              <keep-key>oozie.service.AuthorizationService.authorization.enabled</keep-key>
              <keep-key>oozie.service.HadoopAccessorService.hadoop.configurations</keep-key>
              <keep-key>oozie.service.HadoopAccessorService.kerberos.enabled</keep-key>
              <keep-key>oozie.service.URIHandlerService.uri.handlers</keep-key>
            </transfer>
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
      <component name="OOZIE_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="FALCON">
      <component name="FALCON_SERVER">
        <pre-upgrade>
          <task xsi:type="configure">
            <type>oozie-site</type>
            <transfer operation="copy" from-key="oozie.service.ELService.ext.functions.coord-job-submit-instances" to-key="oozie.service.ELService.ext.functions.coord-job-submit-instances"/>
            <transfer operation="copy" from-key="oozie.service.ELService.ext.functions.coord-action-create-inst" to-key="oozie.service.ELService.ext.functions.coord-action-create-inst"/>
            <transfer operation="copy" from-key="oozie.service.ELService.ext.functions.coord-action-create" to-key="oozie.service.ELService.ext.functions.coord-action-create"/>
            <transfer operation="copy" from-key="oozie.service.ELService.ext.functions.coord-job-submit-data" to-key="oozie.service.ELService.ext.functions.coord-job-submit-data"/>
            <transfer operation="copy" from-key="oozie.service.ELService.ext.functions.coord-action-start" to-key="oozie.service.ELService.ext.functions.coord-action-start"/>
            <transfer operation="copy" from-key="oozie.service.ELService.ext.functions.coord-sla-submit" to-key="oozie.service.ELService.ext.functions.coord-sla-submit"/>
            <transfer operation="copy" from-key="oozie.service.ELService.ext.functions.coord-sla-create" to-key="oozie.service.ELService.ext.functions.coord-sla-create"/>
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
      <component name="FALCON_CLIENT">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="KAFKA">
      <component name="KAFKA_BROKER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="KNOX">
      <component name="KNOX_GATEWAY">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>

    <service name="STORM">
      <component name="NIMBUS">
        <pre-upgrade>
          <task xsi:type="manual">
            <message>Before continuing, please deactivate and kill any currently running topologies.</message>
          </task>

          <task xsi:type="configure" summary="Converting nimbus.host into nimbus.seeds">
            <type>storm-site</type>
            <transfer operation="copy" from-key="nimbus.host" to-key="nimbus.seeds" coerce-to="yaml-array" />
            <transfer operation="delete" delete-key="nimbus.host" />
          </task>

          <task xsi:type="configure" summary="Configuring Ranger Storm Policy">
            <type>ranger-storm-policymgr-ssl</type>
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="SSL_KEYSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.keystore" default-value="/usr/hdp/current/storm-nimbus/conf/ranger-plugin-keystore.jks"/>
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="SSL_KEYSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.keystore.password" default-value="myKeyFilePassword" mask="true"/>
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="SSL_TRUSTSTORE_FILE_PATH" to-key="xasecure.policymgr.clientssl.truststore" default-value="/usr/hdp/current/storm-nimbus/conf/ranger-plugin-truststore.jks"/>
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="SSL_TRUSTSTORE_PASSWORD" to-key="xasecure.policymgr.clientssl.truststore.password" default-value="changeit" mask="true"/>
          </task>

          <task xsi:type="configure" summary="Configuring Ranger Storm Audit">
            <type>ranger-storm-audit</type>
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="XAAUDIT.DB.IS_ENABLED" to-key="xasecure.audit.destination.db" default-value="FALSE" />
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY" to-key="xasecure.audit.destination.hdfs.dir" default-value="hdfs://{{namenode_hostname}}:8020/ranger/audit" />
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="XAAUDIT.HDFS.IS_ENABLED" to-key="xasecure.audit.destination.hdfs" default-value="TRUE" />
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY" to-key="xasecure.audit.destination.hdfs.batch.filespool.dir" default-value="/var/log/storm/audit/hdfs/spool" />
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="XAAUDIT.DB.USER_NAME" to-key="xasecure.audit.destination.db.user" default-value=""/>
            <transfer operation="copy" from-type="ranger-storm-plugin-properties" from-key="XAAUDIT.DB.PASSWORD" to-key="xasecure.audit.destination.db.passwordr" default-value="" mask="true"/>
            <set key="xasecure.audit.credential.provider.file" value="jceks://file{{credential_file}}"/>
            <set key="xasecure.audit.destination.solr" value="TRUE"/>
            <set key="xasecure.audit.destination.solr.urls" value="{{ranger_audit_solr_urls}}"/>
            <set key="xasecure.audit.destination.solr.zookeepers" value=""/>
            <set key="xasecure.audit.destination.solr.batch.filespool.dir" value="/var/log/storm/audit/solr/spool"/>
            <set key="xasecure.audit.destination.db.jdbc.driver" value="{{jdbc_driver}}"/>
            <set key="xasecure.audit.destination.db.jdbc.url" value=""/>
            <set key="xasecure.audit.destination.db.user" value=""/>
            <set key="xasecure.audit.provider.summary.enabled" value="TRUE"/>
          </task>

          <task xsi:type="configure" summary="Removing Deprecated Ranger Configurations">
            <type>ranger-storm-plugin-properties</type>
            <transfer operation="delete" delete-key="SSL_KEYSTORE_FILE_PATH"/>
            <transfer operation="delete" delete-key="SSL_KEYSTORE_PASSWORD"/>
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_FILE_PATH"/>
            <transfer operation="delete" delete-key="SSL_TRUSTSTORE_PASSWORD"/>
            <transfer operation="delete" delete-key="XAAUDIT.DB.IS_ENABLED"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINATION_DIRECTORY"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.IS_ENABLED"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY"/>
            <transfer operation="delete" delete-key="XAAUDIT.DB.USER_NAME"/>
            <transfer operation="delete" delete-key="XAAUDIT.DB.PASSWORD"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FILE"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FILE"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS"/>
            <transfer operation="delete" delete-key="XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS"/>
          </task>
        </pre-upgrade>
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
      <component name="STORM_REST_API">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
      <component name="SUPERVISOR">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
      <component name="STORM_UI_SERVER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
      <component name="DRPC_SERVER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
        <post-upgrade>
          <task xsi:type="manual">
            <message>Please rebuild your topology using the new Storm version dependencies and resubmit it using the newly created jar.</message>
          </task>
        </post-upgrade>
      </component>
    </service>

    <service name="FLUME">
      <component name="FLUME_HANDLER">
        <upgrade>
          <task xsi:type="restart" />
        </upgrade>
      </component>
    </service>
  </processing>
</upgrade>
